name : Processor;

parameters : {
  processing_time : < R+ > = 10
}

in_ports: {
  in = {v=(x=<R>,y=<R>)}
}

out_ports: {
  out = {v=(x=<R>,y=<R>)}
}

state: {
  phase = { passive, busy },
  sigma = < R+ >,
  q = [(x=<R>,y=<R>)],
  z = (x=<R>,y=<R>)
}

init: {
  phase = passive,
  sigma = +inf,
  q = empty_set,
  z=(0,0)
}

delta_int: {
  (phase, sigma, q.first, z) -> (passive, processing_time, q, z)
}

delta_ext: {
  (((passive, sigma, q, z), e), {(in,{[v]})}) -> (busy, processing_time, q, z),
  (((busy, sigma, q, z), e), {(in,{[v]})}) -> (busy, sigma - e, push(q, [v]), z),
  (((busy, sigma, q, z), e), {(in,{v1, v2})}) -> (busy, sigma - e, push(q, v), z)
}

delta_conf: {
  ((passive, sigma, q, z), {(in,{[v]})}) -> delta_ext(delta_int((phase, sigma, q, z)), 0, {(in,{[v]})})
}

ta: {
  (phase, sigma, q, z) -> sigma
}

output: {
  (phase, sigma, q.first, z) -> {(out, {(out,q.first)})}
}