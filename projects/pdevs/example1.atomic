name : MyModel;

parameters : {
  RH_init : < R+ > = 10.0,
  in_flow : < R* > = 10.0,
  out_flow : < R+* > = 5.0
}

in_ports: {
  in = {},
  in1 = {qty=< R+ >},
  in2 = {a=< R+ >, b=< R+ >}
}

out_ports: {
  out = {},
  out1 = {a=< R+ >, b=< N >}
}

state: {
  RH = < R+ >,
  Phase = { Wait, Send }
}

init: {
  RH = RH_init,
  Phase = Wait
}

delta_int: {
  (RH, Phase) -> (RH + in_flow - out_flow, Phase) [RH + in_flow - out_flow > 0],
  (RH, Phase) -> (0, Phase) [RH + in_flow - out_flow < 0]
}

delta_ext: {
  (((RH, Phase), e), {in}) -> (RH + 1, Phase),
  (((RH, Phase), e), {(in1,{qty})}) -> (RH + qty, Phase),
  (((RH, Phase), e), {(in1,{qty1}),(in1,{qty2})}) -> (RH + qty1 + qty2, Phase),
  (((RH, Phase), e), {(in2,{ab, cd})}) -> (RH + ab + cd, Phase),
  (((RH, Phase), e), {(in1,{ab}), (in2,{ij, kl})}) -> (RH + ab - (ij + kl), Phase)
}

delta_conf: {
  ((RH, Phase), {in}) -> (RH, Phase)
}

ta: {
  (RH, Phase) -> 1 [x1 = 0 and (y1 <> 0 or not(z1<0))]
}

output: {
  (RH, Phase) -> {out1, out2},
  (RH, Phase) -> {(out, {(RH,RH + 1)})},
  (RH, Phase) -> {(out, {(ab,ab),(cd,cd)})},
  (RH, Phase) -> {(out1, {(ab,ab),(cd,cd)}), (out2, {(ab,ab),(cd,cd)})}
}